function hello_world() {
	echo "Hello world";
}

function short_branch_name() {
    BRANCH=`git rev-parse --abbrev-ref HEAD 2>/dev/null`
    if [ ! $BRANCH ]; then
        return $BRANCH
    fi
    if [[ $BRANCH =~ "/" ]]; then
        branch_type=$(echo $BRANCH | cut -c1)"/"
    fi
    name=`echo $BRANCH| cut -d "/" -f 2 | cut -d "-" -f 1,2,3`
    echo "${branch_type}${name}"
}

function git_info() {
  branch_name=''
  dirty_state=''
  if [[ -n $(short_branch_name) ]];then
    # Current branch
    branch_name=`short_branch_name`
    # Dirty state
    dirty_state=''
    if [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]]; then
      dirty_state=`echo -e " ±"`
    fi
    # Ahead/behind
    # status_branch=`$(git status -bs) | sed 's/\[([a-z]*) \d*\]/\1/g'`
    # Just in case do a git fetch dry run
    status_branch=$(git status -bs | awk '{print $3}' | cut -d '[' -f 2)
    ahead=''
    behind=''
    if [[ $status_branch == 'behind' ]]; then
      number_of_commits=$(git status -bs | awk '{print $3$4}' | cut -d '[' -f 2 | cut -d ']' -f 1 | cut -d 'd' -f 2)
      behind=" ↓ $number_of_commits"
    # elif [[ $status_branch == '' ]];then
    #   git fetch origin $(git rev-parse --abbrev-ref HEAD) --dry-run -n
    elif [[ $status_branch == 'ahead' ]]; then
      number_of_commits=$(git status -bs | awk '{print $3$4}' | cut -d '[' -f 2 | cut -d ']' -f 1 | cut -d 'd' -f 2)
      ahead=" ↑ $number_of_commits"
    fi
    # echo -e " \ue725 $branch_name$dirty_state$ahead$behind$(SEP3)"
    echo -e " \ue0a0 $branch_name$dirty_state$ahead$behind$(SEP3)"
  elif [[ $(short_branch_name) == '' ]];then
    echo $(short_branch_name)
  fi
}

function get_branches() {
    git branch -r | tail -n +2 | sed "s|^[^/]*/||" | sort
}

function fetchout() {
    branches_were=$(get_branches)
    git fetch
    branches_are=$(get_branches)

    mapfile -t choices < <(diff --old-line-format="" --unchanged-line-format="" <(echo "$branches_were") <(echo "$branches_are"))

    if [ ${#choices[@]} -eq 1 ]
    then
        git checkout "${choices[@]}"
        exit 0
    elif (( ${#choices[@]} ))
    then
        echo
        select branch in "${choices[@]}"
        do
            git checkout "$branch"
            exit 0
        done
    fi
}

